input {
#    beats {
#        port => "5044"
#    }
    file {
        path => "/var/log/vm.log"
        type => "vmware"
        start_position => "beginning"
        sincedb_path => "NULL"
    }

}
filter {
	grok {
      break_on_match => true  
      match => [ "message","\[%{DATA:syslog_pri}\] \[%{TIMESTAMP_ISO8601:syslog_timestamp}\] \[%{PROG:application_name}\] \[%{DATA:syslog_level}\] \[%{DATA:username}\] \[%{DATA:VCENTER_DATACENTER_ID}\] \[%{DATA:VCENTER_PROCESS_ID}\] \[%{DATA:vmware_guest_name} on %{DATA:HYPERVISOR_NAME} in %{DATA:VCENTER_DATACENTER_ID} is powered %{DATA:vmware_power_state}\]",
"message","\[%{DATA:syslog_pri}\] \[%{TIMESTAMP_ISO8601:syslog_timestamp}\] \[%{PROG:application_name}\] \[%{DATA:syslog_level}\] \[%{DATA:username}\] \[%{DATA:VCENTER_DATACENTER_ID}\] \[%{DATA:VCENTER_PROCESS_ID}\] \[%{DATA:vmware_guest_name} on %{DATA:HYPERVISOR_NAME} in %{DATA:VCENTER_DATACENTER_ID} has powered %{DATA:vmware_power_state}\]",
"message", "\[%{DATA:syslog_pri}\] \[%{TIMESTAMP_ISO8601:syslog_timestamp}\] \[%{PROG:application_name}\] \[%{DATA:syslog_level}\] \[%{DATA:username}\] \[%{DATA:VCENTER_DATACENTER_ID}\] \[%{DATA:VCENTER_PROCESS_ID}\] \[DRS powered on %{DATA:vmware_guest_name} on %{DATA:HYPERVISOR_NAME} in %{DATA:VCENTER_DATACENTER_ID}\]",
"message", "\[%{DATA:syslog_pri}\] \[%{TIMESTAMP_ISO8601:syslog_timestamp}\] \[%{PROG:application_name}\] \[%{DATA:syslog_level}\] \[%{DATA:username}\] \[%{DATA:VCENTER_DATACENTER_ID}\] \[%{DATA:VCENTER_PROCESS_ID}\] \[Task: %{GREEDYDATA:vmware_task_executed}\]",
"message", "\[%{DATA:syslog_pri}\] \[%{TIMESTAMP_ISO8601:syslog_timestamp}\] \[%{PROG:application_name}\] \[%{DATA:syslog_level}\] \[%{DATA:username}\] \[%{DATA:VCENTER_DATACENTER_ID}\] \[%{DATA:VCENTER_PROCESS_ID}\] \[%{GREEDYDATA:syslog_message}\]",
"message", "\[%{DATA:syslog_pri}\] \[%{TIMESTAMP_ISO8601:syslog_timestamp}\] \[%{PROG:application_name}\] \[%{DATA:syslog_level}\] \[%{DATA:username}\] \[%{DATA:VCENTER_DATACENTER_ID}\] \[%{DATA:VCENTER_PROCESS_ID}\] \[Reconfigured %{DATA:vmware_guest_name} on %{DATA:HYPERVISOR_NAME} in %{DATA:VCENTER_DATACENTER_ID}", 
"message", "\[%{DATA:syslog_pri}\] \[%{TIMESTAMP_ISO8601:syslog_timestamp}\] \[%{GREEDYDATA:syslog_message}\]",
"message", "%{TIMESTAMP_ISO8601:syslog_timestamp} %{GREEDYDATA:syslog_message}"
]

}
    date {
      match => [ "syslog_timestamp" , "dd/MMM/yyyy:HH:mm:ss Z", "ISO8601" ]
    }

 
#    date {
#      match => [ "syslog_timestamp", "YYYY-MM-dd HH:mm:ss,SSS", "YYYY-MM-ddHH:mm:ss,SSS", "ISO8601" ]
#      timezone => "UTC"
#    }
 if "_grokdateparsefailure" in [tags]{
    grok {
	break_on_match => false
	match => [
		"message", "${GREEDYDATA:syslog_message}"
	]	
    }

 }

 if "_grokparsefailure" in [tags] {
      grok {
        break_on_match => false
        match => [
          "message", "${GREEDYDATA:syslog_message}"
        ]
      }
}

syslog_pri {}
  mutate {
    rename => [ "host", "syslog_source_IP" ]
    rename => [ "hostname", "syslog_source_hostname" ]
    rename => [ "message", "message_raw" ]
    rename => [ "program", "message_program" ]
    rename => [ "message_vce_server", "syslog_source_hostname" ]
    remove_field => [ "@version", "type", "path" ]
    #add_field => { "message_timestamp" => "%{YEAR}-%{MONTHNUM}-%{MONTHDAY} %{TIME}"}
  }

}
output {
  elasticsearch {
    hosts => ["localhost:9200"]
    index => "vmware-%{+YYYY.MM.dd}"
    document_type => "_doc"
    #user => "elastic"
    #password => "${ES_PWD}"
  }
  stdout{
   codec => rubydebug
  }
  file {
    path => "/var/log/logstashexecute.log"
  }


}


